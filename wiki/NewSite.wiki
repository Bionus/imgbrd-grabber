#summary How to create a new site file.

= v2.0 and higher =

== Based on gelbooru, danbooru or shimmie ==
To add an imageboard/booru:
  # Start the program.
  # Click on the "Sources" button at the bottom of the window ("Explore" tab).
  # Click on the "Add" button at the bottom of the window that just popped up.
  # Fill the Url field, and leave "Guess" checked.
  # If an error occurs, uncheck "Guess", and choose an imageboard in the list.
_*Note that shimmie-based boorus will give random results when downloading multiple images from them!*_

== Add a site type ==

*Part not finished!*
If your site is not based on danbooru/gelbooru/shimmie, it gets more complicated. *You must have a minimal knowledge of XML and regex to make your own one.* Here is an example of file you'll have to create (it is the danbooru's file):
{{{
<?xml version="1.0" encoding="utf-8" ?>
<Site>
	<Name>Danbooru</Name>
	<Urls>
		<Xml>
			<Tags>/post/index.xml?login={pseudo}&amp;password_hash={password}&amp;limit={limit}&amp;page={page}&amp;tags={tags}</Tags>
			<Popular>/post/index.xml?login={pseudo}&amp;password_hash={password}&amp;limit={limit}&amp;page={page}&amp;tags=date:{month}/{day}/{year} order:score</Popular>
		</Xml>
		<Json>
			<Tags>/post/index.json?login={pseudo}&amp;password_hash={password}&amp;limit={limit}&amp;page={page}&amp;tags={tags}</Tags>
			<Popular>/post/index.json?login={pseudo}&amp;password_hash={password}&amp;limit={limit}&amp;page={page}&amp;tags=date:{month}/{day}/{year} order:score</Popular>
		</Json>
		<Html>
			<Post>/post/show/{id}</Post>
		</Html>
	</Urls>
	<Regex>
		<Tags>&lt;li class=&quot;tag-type-(.+)&quot;&gt;.*&lt;a href=&quot;.+&quot;&gt;.*&lt;/a&gt;.*&lt;a href=&quot;.+&quot;&gt;(.+)&lt;/a&gt;.*&lt;/li&gt;</Tags>
		<Image>&lt;span class=&quot;.*&quot; id=&quot;p(\d*)&quot;&gt;.*&lt;a .*&gt;.*(&lt;img[ ]+class=&quot;.*&quot; src=&quot;(http://danbooru.donmai.us/data/preview/(.*).jpg)&quot; title=&quot;(.+) rating:(.*) score:(.*) user:(.*)&quot; alt=&quot;.*&quot; width=.* height=.*&gt;).*&lt;/a&gt;.*&lt;/span&gt;</Image>
		<Order>id|image|preview_url|md5|tags|rating|score|user</Order>
		<LastPage>&lt;link href=&quot;/post\?limit=\d*&amp;page=(\d*)&amp;tags=[^&quot;]*&quot; rel=&quot;last&quot; title=&quot;Last Page&quot;&gt;</LastPage>
	</Regex>
	<FirstPage>1</FirstPage>
</Site>
}}}
Let's explain it in detail.
  * Name: the name that will be shown in the sources window.
  * Urls: the pages urls. You must set at least Html/Post and either Xml or Json. They must start with a slash.
   * Xml/Json
    * Tags
    * Tags
   * Html
    * Post: url of an image details.
  * Regex: even when using xml/json, some regex must be used
   * Tags
   * Image
   * LastPage
  * FirstPage: the number of the firstpage, usually 1 (but, for example, gelbooru starts with 0).

= Before v2.0 =

There are three ways to retrieve informations from imageboards: using an XML API, a JSON API, or using regex (from "best" to "worst"). To add a site to the program, you must create a file named according to the site's url (ex: "danbooru.donmai.us"), without "http://" and any ending slash.
These files must be put in the "sites" directory, then in the corresponding sub-directory ("xml", "json" or "regex"). There can be 3 files by site, one per directory.

== XML ==
For the majority of boorus (based on danbooru and gelbooru).
  # The first page number. Usually set to 1.
  # Url of posts list. Set the limit param to {limit}, page to {page} and tags to {tags}.
  # Url of popular images. Set the day param to {day}, month to {month} and year to {year}.
  # Url of single post, by id. Set the id param to {id}.
  # Regex for tags list.
Example :
{{{
1
http://danbooru.donmai.us/post/index.xml?limit={limit}&page={page}&tags={tags}
http://danbooru.donmai.us/post/popular_by_day.xml?day={day}&month={month}&year={year}
http://danbooru.donmai.us/post/show/{id}
<li class="tag-type-(.+)">.*<a href=".+">.*</a>.*<a href=".+">(.+)</a>.*</li>
}}}

== JSON ==
An alternative for many boorus, and necessary for a few others (sankakucomplex for example)
  # The first page number. Usually set to 1.
  # Url of posts list. Set the limit param to {limit}, page to {page} and tags to {tags}.
  # Url of popular images. Set the day param to {day}, month to {month} and year to {year}.
  # Url of single post, by id. Set the id param to {id}.
  # Regex for tags list.
Example :
{{{
1
http://danbooru.donmai.us/post/index.json?limit={limit}&page={page}&tags={tags}
http://danbooru.donmai.us/post/popular_by_day.json?day={day}&month={month}&year={year}
http://danbooru.donmai.us/post/show/{id}
<li class="tag-type-(.+)">.*<a href=".+">.*</a>.*<a href=".+">(.+)</a>.*</li>
}}}

== Regex ==
I advise you not to use regex to retrieve information, unless this is the only way (for the boorus that doesn't provide any API).
  # The first page number. Usually set to 1.
  # Url of posts list. Set the limit param to {limit}, page to {page} and tags to {tags}.
  # Url of popular images. Set the day param to {day}, month to {month} and year to {year}.
  # Url of single post, by id. Set the id param to {id}.
  # Regex for tags list.
  # Regex for a single image on the posts list.
  # Names of retrieved informations.
  # Regex for the last page.
  # This one is optional. It is the image's url. For example : "`http://www.somesite.com/image/{id}.{ext}`" (tokens: id, ext, md5). {ext} will by replaced in this order, until it finds the image: jpg, png, jpeg, gif.
Example :
{{{
1
http://danbooru.donmai.us/post/index?limit={limit}&page={page}&tags={tags}
http://danbooru.donmai.us/post/popular_by_day?day={day}&month={month}&year={year}
http://danbooru.donmai.us/post/show/{id}
<li class="tag-type-(.+)">.*<a href=".+">.*</a>.*<a href=".+">(.+)</a>.*</li>
<span class=".*" id="p(\d*)">.*<a .*>.*(<img[ ]+class=".*" src="(http://danbooru.donmai.us/data/preview/(.*).jpg)" title="(.+) rating:(.*) score:(.*) user:(.*)" alt=".*" width=.* height=.*>).*</a>.*</span>
id|image|preview_url|md5|tags|rating|score|user
<link href="/post\?limit=\d*&amp;page=(\d*)&amp;tags=[^"]*" rel="last" title="Last Page">
}}}


= Conclusion =

Note that most of the imageboards use the same API. So in most of the case, doing a copy/paste of the danbooru or gelbooru (the two main engines) file, then changing url is enough. For shimmie-based boorus, you can copy/paste the one from tentaclerape, but you may have to do some modifications.
And don't hesitate sending me a mail with your site file at bio.nus@hotmail.fr, so I will add it to the officially supported boorus!