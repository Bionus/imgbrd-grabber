language: cpp
compiler: gcc

# OS X build
matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
    - os: osx

# Qt packages for Linux
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - sqlite3
      - libqt5sql5-sqlite
      - qtbase5-dev
      - qtscript5-dev
      - qtmultimedia5-dev
      - qttools5-dev
      - qttools5-dev-tools
      - sshpass
      - lcov

# Qt packages for OS X
install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update &&
      brew install http://git.io/sshpass.rb &&
      brew install qt5 &&
      QT_PATH=$(find /usr/local/Cellar/qt/* -maxdepth 0 -type d | head -1)
      PATH=$QT_PATH/bin:$PATH &&
      export PATH
    ; fi

before_script:
  # Start X before running tests on Linux
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export DISPLAY=:99.0 &&
      sh -e /etc/init.d/xvfb start &&
      sleep 3
    ; fi
  # Set the OpenSSL path on OSX
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export OPENSSL_ROOT_DIR=/usr/local/opt/openssl/
    ; fi

# Build Grabber
script:
  - mkdir build && cd build
  - cmake ..
  - make -j8
  - cd ..
  - ./build/tests/tests

after_success:
  # Upload code coverage
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      lcov --directory . --capture --output-file coverage.info &&
      lcov --remove coverage.info '/usr/*' --output-file coverage.info &&
      lcov --list coverage.info &&
      bash <(curl -s https://codecov.io/bash)
    ; fi
  # Generate release name
  - if [[ "$TRAVIS_TAG" == "" ]]; then
      export BUILD_LABEL=$TRAVIS_BRANCH
    ; else
      export BUILD_LABEL=$TRAVIS_TAG
    ; fi
  # Build and upload release
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      cp "build/gui/Grabber" "release/Grabber" &&
      touch "release/settings.ini" &&
      rm "release/CDR.exe" &&
      cd release && zip -r ../Grabber.zip . && cd - &&
      export OUTPUT_FILE="Grabber_${BUILD_LABEL}_linux.zip" &&
      sshpass -p "$SSH_PASS" scp -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no Grabber.zip $SSH_USER@$SSH_HOST:$OUTPUT_FILE
    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      cp "build/gui/Grabber" "release/Grabber" &&
      touch "release/settings.ini" &&
      rm "release/CDR.exe" &&
      cd release && zip -r ../Grabber.zip . && cd - &&
      export OUTPUT_FILE="Grabber_${BUILD_LABEL}_mac.app.zip" &&
      sshpass -p "$SSH_PASS" scp -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no Grabber.zip $SSH_USER@$SSH_HOST:$OUTPUT_FILE
    ; fi
